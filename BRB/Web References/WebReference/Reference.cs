//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.5485.
// 
namespace BRB.WebReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BRB_SyncSoap", Namespace="http://pakko.org/")]
    public partial class BRB_Sync : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public BRB_Sync() {
            this.Url = "http://10.10.4.215/BRB_Sync/BRB_Sync.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/GetServiceVersion", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServiceVersion() {
            object[] results = this.Invoke("GetServiceVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServiceVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServiceVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetServiceVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/GetFileVersion", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileVersion() {
            object[] results = this.Invoke("GetFileVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetFileVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/GetFileVersionNew", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileVersionNew(string file) {
            object[] results = this.Invoke("GetFileVersionNew", new object[] {
                        file});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileVersionNew(string file, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileVersionNew", new object[] {
                        file}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetFileVersionNew(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/GetFile", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFile(string file) {
            object[] results = this.Invoke("GetFile", new object[] {
                        file});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFile(string file, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFile", new object[] {
                        file}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/TestConnectionToDbServer", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestConnectionToDbServer() {
            object[] results = this.Invoke("TestConnectionToDbServer", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestConnectionToDbServer(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestConnectionToDbServer", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndTestConnectionToDbServer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/LoadCheckPrices", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadCheckPrices(System.Data.DataSet dsTerm, string pocketName, string shopName) {
            object[] results = this.Invoke("LoadCheckPrices", new object[] {
                        dsTerm,
                        pocketName,
                        shopName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadCheckPrices(System.Data.DataSet dsTerm, string pocketName, string shopName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadCheckPrices", new object[] {
                        dsTerm,
                        pocketName,
                        shopName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadCheckPrices(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/UpLoadPriceLogs", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpLoadPriceLogs(System.Data.DataSet dsTerm, string pocketName, string shopName) {
            object[] results = this.Invoke("UpLoadPriceLogs", new object[] {
                        dsTerm,
                        pocketName,
                        shopName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpLoadPriceLogs(System.Data.DataSet dsTerm, string pocketName, string shopName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpLoadPriceLogs", new object[] {
                        dsTerm,
                        pocketName,
                        shopName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndUpLoadPriceLogs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/LoadDocs", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadDocs(System.Data.DataSet dsTerm, string pocket_id, string shopName, int w, int a, int u, System.DateTime date, string number_doc) {
            object[] results = this.Invoke("LoadDocs", new object[] {
                        dsTerm,
                        pocket_id,
                        shopName,
                        w,
                        a,
                        u,
                        date,
                        number_doc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadDocs(System.Data.DataSet dsTerm, string pocket_id, string shopName, int w, int a, int u, System.DateTime date, string number_doc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadDocs", new object[] {
                        dsTerm,
                        pocket_id,
                        shopName,
                        w,
                        a,
                        u,
                        date,
                        number_doc}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadDocs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/UpLoadDocsNew", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpLoadDocsNew(System.Data.DataSet dsTerm, string version) {
            object[] results = this.Invoke("UpLoadDocsNew", new object[] {
                        dsTerm,
                        version});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpLoadDocsNew(System.Data.DataSet dsTerm, string version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpLoadDocsNew", new object[] {
                        dsTerm,
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndUpLoadDocsNew(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/UpLoadDocs", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpLoadDocs(System.Data.DataSet dsTerm) {
            object[] results = this.Invoke("UpLoadDocs", new object[] {
                        dsTerm});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpLoadDocs(System.Data.DataSet dsTerm, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpLoadDocs", new object[] {
                        dsTerm}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndUpLoadDocs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/LoadInventory", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadInventory(string pocket_id, string shopName, string number_doc) {
            object[] results = this.Invoke("LoadInventory", new object[] {
                        pocket_id,
                        shopName,
                        number_doc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadInventory(string pocket_id, string shopName, string number_doc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadInventory", new object[] {
                        pocket_id,
                        shopName,
                        number_doc}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadInventory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/LoadInventoryOS", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadInventoryOS(System.Data.DataSet dsTerm, string pocketName) {
            object[] results = this.Invoke("LoadInventoryOS", new object[] {
                        dsTerm,
                        pocketName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadInventoryOS(System.Data.DataSet dsTerm, string pocketName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadInventoryOS", new object[] {
                        dsTerm,
                        pocketName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadInventoryOS(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pakko.org/UpLoadInventoryOS", RequestNamespace="http://pakko.org/", ResponseNamespace="http://pakko.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpLoadInventoryOS(System.Data.DataSet dsTerm, string pocketName, string shopName) {
            object[] results = this.Invoke("UpLoadInventoryOS", new object[] {
                        dsTerm,
                        pocketName,
                        shopName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpLoadInventoryOS(System.Data.DataSet dsTerm, string pocketName, string shopName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpLoadInventoryOS", new object[] {
                        dsTerm,
                        pocketName,
                        shopName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndUpLoadInventoryOS(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
    }
}
